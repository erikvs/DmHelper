#pragma checksum "F:\dotNET\NewApp\DMHelper\DMHelper\Views\EncountersPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "4B0286EBB57A21D90AB8B475ED10EF97DF6367DE71B4AC33102AA11F3F55C67A"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using WinRT;

namespace DMHelper.Views
{
    partial class EncountersPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedItem(global::Microsoft.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Microsoft_UI_Xaml_FrameworkElement_Tag(global::Microsoft.UI.Xaml.FrameworkElement obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Tag = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBox_Text(global::Microsoft.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class EncountersPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IEncountersPage_Bindings
        {
            private global::DMHelper.Views.EncountersPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.Button obj3;
            private global::Microsoft.UI.Xaml.Controls.Button obj4;
            private global::Microsoft.UI.Xaml.Controls.ListView obj5;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj7;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj8;
            private global::Microsoft.UI.Xaml.Controls.ListView obj9;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3TagDisabled = false;
            private static bool isobj4TagDisabled = false;
            private static bool isobj5ItemsSourceDisabled = false;
            private static bool isobj7TextDisabled = false;
            private static bool isobj8TextDisabled = false;
            private static bool isobj9ItemsSourceDisabled = false;
            private static bool isobj9SelectedItemDisabled = false;

            private EncountersPage_obj1_BindingsTracking bindingsTracking;

            public EncountersPage_obj1_Bindings()
            {
                this.bindingsTracking = new EncountersPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 95 && columnNumber == 25)
                {
                    isobj3TagDisabled = true;
                }
                else if (lineNumber == 103 && columnNumber == 25)
                {
                    isobj4TagDisabled = true;
                }
                else if (lineNumber == 73 && columnNumber == 31)
                {
                    isobj5ItemsSourceDisabled = true;
                }
                else if (lineNumber == 62 && columnNumber == 37)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 48 && columnNumber == 30)
                {
                    isobj8TextDisabled = true;
                }
                else if (lineNumber == 26 && columnNumber == 27)
                {
                    isobj9ItemsSourceDisabled = true;
                }
                else if (lineNumber == 27 && columnNumber == 27)
                {
                    isobj9SelectedItemDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // Views\EncountersPage.xaml line 88
                        this.obj3 = target.As<Microsoft.UI.Xaml.Controls.Button>();
                        break;
                    case 4: // Views\EncountersPage.xaml line 96
                        this.obj4 = target.As<Microsoft.UI.Xaml.Controls.Button>();
                        break;
                    case 5: // Views\EncountersPage.xaml line 69
                        this.obj5 = target.As<Microsoft.UI.Xaml.Controls.ListView>();
                        break;
                    case 7: // Views\EncountersPage.xaml line 59
                        this.obj7 = target.As<Microsoft.UI.Xaml.Controls.TextBlock>();
                        break;
                    case 8: // Views\EncountersPage.xaml line 44
                        this.obj8 = target.As<Microsoft.UI.Xaml.Controls.TextBox>();
                        this.bindingsTracking.RegisterTwoWayListener_8(this.obj8);
                        break;
                    case 9: // Views\EncountersPage.xaml line 26
                        this.obj9 = target.As<Microsoft.UI.Xaml.Controls.ListView>();
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IEncountersPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = newDataRoot.As<DMHelper.Views.EncountersPage>();
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::DMHelper.Views.EncountersPage obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SelectedEncounter(obj.SelectedEncounter, phase);
                        this.Update_Encounters(obj.Encounters, phase);
                    }
                }
            }
            private void Update_SelectedEncounter(global::DMHelper.ViewModels.EncountersViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SelectedEncounter(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SelectedEncounter_Id(obj.Id, phase);
                        this.Update_SelectedEncounter_Monsters(obj.Monsters, phase);
                        this.Update_SelectedEncounter_Environment(obj.Environment, phase);
                        this.Update_SelectedEncounter_Name(obj.Name, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EncountersPage.xaml line 26
                    if (!isobj9SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedItem(this.obj9, obj, null);
                    }
                }
            }
            private void Update_SelectedEncounter_Id(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EncountersPage.xaml line 88
                    if (!isobj3TagDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Tag(this.obj3, obj, null);
                    }
                    // Views\EncountersPage.xaml line 96
                    if (!isobj4TagDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Tag(this.obj4, obj, null);
                    }
                }
            }
            private void Update_SelectedEncounter_Monsters(global::System.Collections.Generic.List<global::DMHelper.ViewModels.MonstersViewModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EncountersPage.xaml line 69
                    if (!isobj5ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj5, obj, null);
                    }
                }
            }
            private void Update_SelectedEncounter_Environment(global::DMHelper.ViewModels.EnvironmentViewModel obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SelectedEncounter_Environment_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_SelectedEncounter_Environment_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EncountersPage.xaml line 59
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj7, obj, null);
                    }
                }
            }
            private void Update_SelectedEncounter_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EncountersPage.xaml line 44
                    if (!isobj8TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj8, obj, null);
                    }
                }
            }
            private void Update_Encounters(global::System.Collections.ObjectModel.ObservableCollection<global::DMHelper.ViewModels.EncountersViewModel> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Encounters(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EncountersPage.xaml line 26
                    if (!isobj9ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj9, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_8_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.SelectedEncounter != null)
                        {
                            this.dataRoot.SelectedEncounter.Name = this.obj8.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_9_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.SelectedEncounter = (global::DMHelper.ViewModels.EncountersViewModel)this.obj9.SelectedItem;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class EncountersPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<EncountersPage_obj1_Bindings> weakRefToBindingObj; 

                public EncountersPage_obj1_BindingsTracking(EncountersPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<EncountersPage_obj1_Bindings>(obj);
                }

                public EncountersPage_obj1_Bindings TryGetBindingObject()
                {
                    EncountersPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_SelectedEncounter(null);
                    UpdateChildListeners_Encounters(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    EncountersPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::DMHelper.Views.EncountersPage obj = sender as global::DMHelper.Views.EncountersPage;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_SelectedEncounter(obj.SelectedEncounter, DATA_CHANGED);
                                bindings.Update_Encounters(obj.Encounters, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "SelectedEncounter":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedEncounter(obj.SelectedEncounter, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Encounters":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Encounters(obj.Encounters, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::DMHelper.Views.EncountersPage obj)
                {
                    EncountersPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_SelectedEncounter(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    EncountersPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::DMHelper.ViewModels.EncountersViewModel obj = sender as global::DMHelper.ViewModels.EncountersViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_SelectedEncounter_Id(obj.Id, DATA_CHANGED);
                                bindings.Update_SelectedEncounter_Monsters(obj.Monsters, DATA_CHANGED);
                                bindings.Update_SelectedEncounter_Environment(obj.Environment, DATA_CHANGED);
                                bindings.Update_SelectedEncounter_Name(obj.Name, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Id":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedEncounter_Id(obj.Id, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Monsters":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedEncounter_Monsters(obj.Monsters, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Environment":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedEncounter_Environment(obj.Environment, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedEncounter_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::DMHelper.ViewModels.EncountersViewModel cache_SelectedEncounter = null;
                public void UpdateChildListeners_SelectedEncounter(global::DMHelper.ViewModels.EncountersViewModel obj)
                {
                    if (obj != cache_SelectedEncounter)
                    {
                        if (cache_SelectedEncounter != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_SelectedEncounter).PropertyChanged -= PropertyChanged_SelectedEncounter;
                            cache_SelectedEncounter = null;
                        }
                        if (obj != null)
                        {
                            cache_SelectedEncounter = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_SelectedEncounter;
                        }
                    }
                }
                public void PropertyChanged_Encounters(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    EncountersPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::DMHelper.ViewModels.EncountersViewModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::DMHelper.ViewModels.EncountersViewModel>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_Encounters(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    EncountersPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::DMHelper.ViewModels.EncountersViewModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::DMHelper.ViewModels.EncountersViewModel>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::DMHelper.ViewModels.EncountersViewModel> cache_Encounters = null;
                public void UpdateChildListeners_Encounters(global::System.Collections.ObjectModel.ObservableCollection<global::DMHelper.ViewModels.EncountersViewModel> obj)
                {
                    if (obj != cache_Encounters)
                    {
                        if (cache_Encounters != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_Encounters).PropertyChanged -= PropertyChanged_Encounters;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_Encounters).CollectionChanged -= CollectionChanged_Encounters;
                            cache_Encounters = null;
                        }
                        if (obj != null)
                        {
                            cache_Encounters = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_Encounters;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_Encounters;
                        }
                    }
                }
                public void RegisterTwoWayListener_8(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_8_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_9(global::Microsoft.UI.Xaml.Controls.ListView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_SelectedItem();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\EncountersPage.xaml line 10
                {
                    this.ContentArea = target.As<Microsoft.UI.Xaml.Controls.Grid>();
                }
                break;
            case 3: // Views\EncountersPage.xaml line 88
                {
                    global::Microsoft.UI.Xaml.Controls.Button element3 = target.As<Microsoft.UI.Xaml.Controls.Button>();
                    ((global::Microsoft.UI.Xaml.Controls.Button)element3).Click += this.saveEncounter;
                }
                break;
            case 4: // Views\EncountersPage.xaml line 96
                {
                    global::Microsoft.UI.Xaml.Controls.Button element4 = target.As<Microsoft.UI.Xaml.Controls.Button>();
                    ((global::Microsoft.UI.Xaml.Controls.Button)element4).Click += this.deleteEncounter;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\EncountersPage.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    EncountersPage_obj1_Bindings bindings = new EncountersPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

