#pragma checksum "F:\dotNET\NewApp\DMHelper\DMHelper\Views\MonstersPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "633873DB06DDBB464385DB805A3E6246819E1B47E69E662B0A9871D1F5022D94"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using WinRT;

namespace DMHelper.Views
{
    partial class MonstersPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedItem(global::Microsoft.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Microsoft_UI_Xaml_FrameworkElement_Tag(global::Microsoft.UI.Xaml.FrameworkElement obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Tag = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(global::Microsoft.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedValue = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase obj, global::System.Double value)
            {
                obj.Value = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBox_Text(global::Microsoft.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MonstersPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IMonstersPage_Bindings
        {
            private global::DMHelper.Views.MonstersPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.Button obj3;
            private global::Microsoft.UI.Xaml.Controls.Button obj4;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj5;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj6;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj7;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj8;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj9;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj10;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj11;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj12;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj13;
            private global::Microsoft.UI.Xaml.Controls.Slider obj14;
            private global::Microsoft.UI.Xaml.Controls.Slider obj15;
            private global::Microsoft.UI.Xaml.Controls.Slider obj16;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj17;
            private global::Microsoft.UI.Xaml.Controls.ListView obj18;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3TagDisabled = false;
            private static bool isobj4TagDisabled = false;
            private static bool isobj5SelectedValueDisabled = false;
            private static bool isobj6SelectedValueDisabled = false;
            private static bool isobj7SelectedValueDisabled = false;
            private static bool isobj8SelectedValueDisabled = false;
            private static bool isobj9SelectedValueDisabled = false;
            private static bool isobj10SelectedValueDisabled = false;
            private static bool isobj11TextDisabled = false;
            private static bool isobj12SelectedValueDisabled = false;
            private static bool isobj13SelectedValueDisabled = false;
            private static bool isobj14ValueDisabled = false;
            private static bool isobj15ValueDisabled = false;
            private static bool isobj16ValueDisabled = false;
            private static bool isobj17TextDisabled = false;
            private static bool isobj18ItemsSourceDisabled = false;
            private static bool isobj18SelectedItemDisabled = false;

            private MonstersPage_obj1_BindingsTracking bindingsTracking;

            public MonstersPage_obj1_Bindings()
            {
                this.bindingsTracking = new MonstersPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 431 && columnNumber == 25)
                {
                    isobj3TagDisabled = true;
                }
                else if (lineNumber == 439 && columnNumber == 25)
                {
                    isobj4TagDisabled = true;
                }
                else if (lineNumber == 388 && columnNumber == 31)
                {
                    isobj5SelectedValueDisabled = true;
                }
                else if (lineNumber == 346 && columnNumber == 31)
                {
                    isobj6SelectedValueDisabled = true;
                }
                else if (lineNumber == 304 && columnNumber == 31)
                {
                    isobj7SelectedValueDisabled = true;
                }
                else if (lineNumber == 262 && columnNumber == 31)
                {
                    isobj8SelectedValueDisabled = true;
                }
                else if (lineNumber == 220 && columnNumber == 31)
                {
                    isobj9SelectedValueDisabled = true;
                }
                else if (lineNumber == 178 && columnNumber == 31)
                {
                    isobj10SelectedValueDisabled = true;
                }
                else if (lineNumber == 153 && columnNumber == 37)
                {
                    isobj11TextDisabled = true;
                }
                else if (lineNumber == 118 && columnNumber == 31)
                {
                    isobj12SelectedValueDisabled = true;
                }
                else if (lineNumber == 99 && columnNumber == 31)
                {
                    isobj13SelectedValueDisabled = true;
                }
                else if (lineNumber == 89 && columnNumber == 29)
                {
                    isobj14ValueDisabled = true;
                }
                else if (lineNumber == 77 && columnNumber == 29)
                {
                    isobj15ValueDisabled = true;
                }
                else if (lineNumber == 65 && columnNumber == 29)
                {
                    isobj16ValueDisabled = true;
                }
                else if (lineNumber == 53 && columnNumber == 31)
                {
                    isobj17TextDisabled = true;
                }
                else if (lineNumber == 26 && columnNumber == 27)
                {
                    isobj18ItemsSourceDisabled = true;
                }
                else if (lineNumber == 27 && columnNumber == 27)
                {
                    isobj18SelectedItemDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // Views\MonstersPage.xaml line 424
                        this.obj3 = target.As<Microsoft.UI.Xaml.Controls.Button>();
                        break;
                    case 4: // Views\MonstersPage.xaml line 432
                        this.obj4 = target.As<Microsoft.UI.Xaml.Controls.Button>();
                        break;
                    case 5: // Views\MonstersPage.xaml line 384
                        this.obj5 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 6: // Views\MonstersPage.xaml line 342
                        this.obj6 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_6(this.obj6);
                        break;
                    case 7: // Views\MonstersPage.xaml line 300
                        this.obj7 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_7(this.obj7);
                        break;
                    case 8: // Views\MonstersPage.xaml line 258
                        this.obj8 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_8(this.obj8);
                        break;
                    case 9: // Views\MonstersPage.xaml line 216
                        this.obj9 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    case 10: // Views\MonstersPage.xaml line 174
                        this.obj10 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_10(this.obj10);
                        break;
                    case 11: // Views\MonstersPage.xaml line 150
                        this.obj11 = target.As<Microsoft.UI.Xaml.Controls.TextBlock>();
                        break;
                    case 12: // Views\MonstersPage.xaml line 114
                        this.obj12 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_12(this.obj12);
                        break;
                    case 13: // Views\MonstersPage.xaml line 95
                        this.obj13 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_13(this.obj13);
                        break;
                    case 14: // Views\MonstersPage.xaml line 83
                        this.obj14 = target.As<Microsoft.UI.Xaml.Controls.Slider>();
                        this.bindingsTracking.RegisterTwoWayListener_14(this.obj14);
                        break;
                    case 15: // Views\MonstersPage.xaml line 71
                        this.obj15 = target.As<Microsoft.UI.Xaml.Controls.Slider>();
                        this.bindingsTracking.RegisterTwoWayListener_15(this.obj15);
                        break;
                    case 16: // Views\MonstersPage.xaml line 59
                        this.obj16 = target.As<Microsoft.UI.Xaml.Controls.Slider>();
                        this.bindingsTracking.RegisterTwoWayListener_16(this.obj16);
                        break;
                    case 17: // Views\MonstersPage.xaml line 49
                        this.obj17 = target.As<Microsoft.UI.Xaml.Controls.TextBox>();
                        this.bindingsTracking.RegisterTwoWayListener_17(this.obj17);
                        break;
                    case 18: // Views\MonstersPage.xaml line 26
                        this.obj18 = target.As<Microsoft.UI.Xaml.Controls.ListView>();
                        this.bindingsTracking.RegisterTwoWayListener_18(this.obj18);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IMonstersPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = newDataRoot.As<DMHelper.Views.MonstersPage>();
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::DMHelper.Views.MonstersPage obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SelectedMonster(obj.SelectedMonster, phase);
                        this.Update_Monsters(obj.Monsters, phase);
                    }
                }
            }
            private void Update_SelectedMonster(global::DMHelper.ViewModels.MonstersViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SelectedMonster(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SelectedMonster_Id(obj.Id, phase);
                        this.Update_SelectedMonster_Charisma(obj.Charisma, phase);
                        this.Update_SelectedMonster_Wisdom(obj.Wisdom, phase);
                        this.Update_SelectedMonster_Intelligence(obj.Intelligence, phase);
                        this.Update_SelectedMonster_Constitution(obj.Constitution, phase);
                        this.Update_SelectedMonster_Dexterity(obj.Dexterity, phase);
                        this.Update_SelectedMonster_Strength(obj.Strength, phase);
                        this.Update_SelectedMonster_Environment(obj.Environment, phase);
                        this.Update_SelectedMonster_Attack(obj.Attack, phase);
                        this.Update_SelectedMonster_Speed(obj.Speed, phase);
                        this.Update_SelectedMonster_HitPoints(obj.HitPoints, phase);
                        this.Update_SelectedMonster_Armour(obj.Armour, phase);
                        this.Update_SelectedMonster_Experience(obj.Experience, phase);
                        this.Update_SelectedMonster_Name(obj.Name, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MonstersPage.xaml line 26
                    if (!isobj18SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedItem(this.obj18, obj, null);
                    }
                }
            }
            private void Update_SelectedMonster_Id(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MonstersPage.xaml line 424
                    if (!isobj3TagDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Tag(this.obj3, obj, null);
                    }
                    // Views\MonstersPage.xaml line 432
                    if (!isobj4TagDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Tag(this.obj4, obj, null);
                    }
                }
            }
            private void Update_SelectedMonster_Charisma(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MonstersPage.xaml line 384
                    if (!isobj5SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj5, obj, null);
                    }
                }
            }
            private void Update_SelectedMonster_Wisdom(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MonstersPage.xaml line 342
                    if (!isobj6SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj6, obj, null);
                    }
                }
            }
            private void Update_SelectedMonster_Intelligence(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MonstersPage.xaml line 300
                    if (!isobj7SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj7, obj, null);
                    }
                }
            }
            private void Update_SelectedMonster_Constitution(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MonstersPage.xaml line 258
                    if (!isobj8SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj8, obj, null);
                    }
                }
            }
            private void Update_SelectedMonster_Dexterity(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MonstersPage.xaml line 216
                    if (!isobj9SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj9, obj, null);
                    }
                }
            }
            private void Update_SelectedMonster_Strength(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MonstersPage.xaml line 174
                    if (!isobj10SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj10, obj, null);
                    }
                }
            }
            private void Update_SelectedMonster_Environment(global::DMHelper.ViewModels.EnvironmentViewModel obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SelectedMonster_Environment_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_SelectedMonster_Environment_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MonstersPage.xaml line 150
                    if (!isobj11TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj, null);
                    }
                }
            }
            private void Update_SelectedMonster_Attack(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MonstersPage.xaml line 114
                    if (!isobj12SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj12, obj, null);
                    }
                }
            }
            private void Update_SelectedMonster_Speed(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MonstersPage.xaml line 95
                    if (!isobj13SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj13, obj, null);
                    }
                }
            }
            private void Update_SelectedMonster_HitPoints(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MonstersPage.xaml line 83
                    if (!isobj14ValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj14, obj);
                    }
                }
            }
            private void Update_SelectedMonster_Armour(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MonstersPage.xaml line 71
                    if (!isobj15ValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj15, obj);
                    }
                }
            }
            private void Update_SelectedMonster_Experience(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MonstersPage.xaml line 59
                    if (!isobj16ValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj16, obj);
                    }
                }
            }
            private void Update_SelectedMonster_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MonstersPage.xaml line 49
                    if (!isobj17TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj17, obj, null);
                    }
                }
            }
            private void Update_Monsters(global::System.Collections.ObjectModel.ObservableCollection<global::DMHelper.ViewModels.MonstersViewModel> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Monsters(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MonstersPage.xaml line 26
                    if (!isobj18ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj18, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_5_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.SelectedMonster != null)
                        {
                            this.dataRoot.SelectedMonster.Charisma = (global::System.String)this.obj5.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_6_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.SelectedMonster != null)
                        {
                            this.dataRoot.SelectedMonster.Wisdom = (global::System.String)this.obj6.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_7_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.SelectedMonster != null)
                        {
                            this.dataRoot.SelectedMonster.Intelligence = (global::System.String)this.obj7.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_8_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.SelectedMonster != null)
                        {
                            this.dataRoot.SelectedMonster.Constitution = (global::System.String)this.obj8.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_9_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.SelectedMonster != null)
                        {
                            this.dataRoot.SelectedMonster.Dexterity = (global::System.String)this.obj9.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_10_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.SelectedMonster != null)
                        {
                            this.dataRoot.SelectedMonster.Strength = (global::System.String)this.obj10.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_12_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.SelectedMonster != null)
                        {
                            this.dataRoot.SelectedMonster.Attack = (global::System.String)this.obj12.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_13_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.SelectedMonster != null)
                        {
                            this.dataRoot.SelectedMonster.Speed = (global::System.Int32)this.obj13.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_14_Value()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.SelectedMonster != null)
                        {
                            this.dataRoot.SelectedMonster.HitPoints = (global::System.Int32)this.obj14.Value;
                        }
                    }
                }
            }
            private void UpdateTwoWay_15_Value()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.SelectedMonster != null)
                        {
                            this.dataRoot.SelectedMonster.Armour = (global::System.Int32)this.obj15.Value;
                        }
                    }
                }
            }
            private void UpdateTwoWay_16_Value()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.SelectedMonster != null)
                        {
                            this.dataRoot.SelectedMonster.Experience = (global::System.Int32)this.obj16.Value;
                        }
                    }
                }
            }
            private void UpdateTwoWay_17_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.SelectedMonster != null)
                        {
                            this.dataRoot.SelectedMonster.Name = this.obj17.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_18_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.SelectedMonster = (global::DMHelper.ViewModels.MonstersViewModel)this.obj18.SelectedItem;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class MonstersPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<MonstersPage_obj1_Bindings> weakRefToBindingObj; 

                public MonstersPage_obj1_BindingsTracking(MonstersPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<MonstersPage_obj1_Bindings>(obj);
                }

                public MonstersPage_obj1_Bindings TryGetBindingObject()
                {
                    MonstersPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_SelectedMonster(null);
                    UpdateChildListeners_Monsters(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MonstersPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::DMHelper.Views.MonstersPage obj = sender as global::DMHelper.Views.MonstersPage;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_SelectedMonster(obj.SelectedMonster, DATA_CHANGED);
                                bindings.Update_Monsters(obj.Monsters, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "SelectedMonster":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedMonster(obj.SelectedMonster, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Monsters":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Monsters(obj.Monsters, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::DMHelper.Views.MonstersPage obj)
                {
                    MonstersPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_SelectedMonster(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MonstersPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::DMHelper.ViewModels.MonstersViewModel obj = sender as global::DMHelper.ViewModels.MonstersViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_SelectedMonster_Id(obj.Id, DATA_CHANGED);
                                bindings.Update_SelectedMonster_Charisma(obj.Charisma, DATA_CHANGED);
                                bindings.Update_SelectedMonster_Wisdom(obj.Wisdom, DATA_CHANGED);
                                bindings.Update_SelectedMonster_Intelligence(obj.Intelligence, DATA_CHANGED);
                                bindings.Update_SelectedMonster_Constitution(obj.Constitution, DATA_CHANGED);
                                bindings.Update_SelectedMonster_Dexterity(obj.Dexterity, DATA_CHANGED);
                                bindings.Update_SelectedMonster_Strength(obj.Strength, DATA_CHANGED);
                                bindings.Update_SelectedMonster_Environment(obj.Environment, DATA_CHANGED);
                                bindings.Update_SelectedMonster_Attack(obj.Attack, DATA_CHANGED);
                                bindings.Update_SelectedMonster_Speed(obj.Speed, DATA_CHANGED);
                                bindings.Update_SelectedMonster_HitPoints(obj.HitPoints, DATA_CHANGED);
                                bindings.Update_SelectedMonster_Armour(obj.Armour, DATA_CHANGED);
                                bindings.Update_SelectedMonster_Experience(obj.Experience, DATA_CHANGED);
                                bindings.Update_SelectedMonster_Name(obj.Name, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Id":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedMonster_Id(obj.Id, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Charisma":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedMonster_Charisma(obj.Charisma, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Wisdom":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedMonster_Wisdom(obj.Wisdom, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Intelligence":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedMonster_Intelligence(obj.Intelligence, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Constitution":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedMonster_Constitution(obj.Constitution, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Dexterity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedMonster_Dexterity(obj.Dexterity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Strength":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedMonster_Strength(obj.Strength, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Environment":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedMonster_Environment(obj.Environment, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Attack":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedMonster_Attack(obj.Attack, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Speed":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedMonster_Speed(obj.Speed, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "HitPoints":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedMonster_HitPoints(obj.HitPoints, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Armour":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedMonster_Armour(obj.Armour, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Experience":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedMonster_Experience(obj.Experience, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedMonster_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::DMHelper.ViewModels.MonstersViewModel cache_SelectedMonster = null;
                public void UpdateChildListeners_SelectedMonster(global::DMHelper.ViewModels.MonstersViewModel obj)
                {
                    if (obj != cache_SelectedMonster)
                    {
                        if (cache_SelectedMonster != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_SelectedMonster).PropertyChanged -= PropertyChanged_SelectedMonster;
                            cache_SelectedMonster = null;
                        }
                        if (obj != null)
                        {
                            cache_SelectedMonster = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_SelectedMonster;
                        }
                    }
                }
                public void PropertyChanged_Monsters(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MonstersPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::DMHelper.ViewModels.MonstersViewModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::DMHelper.ViewModels.MonstersViewModel>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_Monsters(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    MonstersPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::DMHelper.ViewModels.MonstersViewModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::DMHelper.ViewModels.MonstersViewModel>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::DMHelper.ViewModels.MonstersViewModel> cache_Monsters = null;
                public void UpdateChildListeners_Monsters(global::System.Collections.ObjectModel.ObservableCollection<global::DMHelper.ViewModels.MonstersViewModel> obj)
                {
                    if (obj != cache_Monsters)
                    {
                        if (cache_Monsters != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_Monsters).PropertyChanged -= PropertyChanged_Monsters;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_Monsters).CollectionChanged -= CollectionChanged_Monsters;
                            cache_Monsters = null;
                        }
                        if (obj != null)
                        {
                            cache_Monsters = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_Monsters;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_Monsters;
                        }
                    }
                }
                public void RegisterTwoWayListener_5(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_6(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_7(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_8(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_8_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_9(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_10(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_10_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_12(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_12_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_13(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_13_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_14(global::Microsoft.UI.Xaml.Controls.Slider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_14_Value();
                        }
                    });
                }
                public void RegisterTwoWayListener_15(global::Microsoft.UI.Xaml.Controls.Slider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_15_Value();
                        }
                    });
                }
                public void RegisterTwoWayListener_16(global::Microsoft.UI.Xaml.Controls.Slider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_16_Value();
                        }
                    });
                }
                public void RegisterTwoWayListener_17(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_17_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_18(global::Microsoft.UI.Xaml.Controls.ListView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_18_SelectedItem();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\MonstersPage.xaml line 10
                {
                    this.ContentArea = target.As<Microsoft.UI.Xaml.Controls.Grid>();
                }
                break;
            case 3: // Views\MonstersPage.xaml line 424
                {
                    global::Microsoft.UI.Xaml.Controls.Button element3 = target.As<Microsoft.UI.Xaml.Controls.Button>();
                    ((global::Microsoft.UI.Xaml.Controls.Button)element3).Click += this.saveMonster;
                }
                break;
            case 4: // Views\MonstersPage.xaml line 432
                {
                    global::Microsoft.UI.Xaml.Controls.Button element4 = target.As<Microsoft.UI.Xaml.Controls.Button>();
                    ((global::Microsoft.UI.Xaml.Controls.Button)element4).Click += this.deleteMonster;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\MonstersPage.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    MonstersPage_obj1_Bindings bindings = new MonstersPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

