#pragma checksum "F:\dotNET\NewApp\DMHelper\DMHelper\Views\CreateMonsterPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "9ACA6921AC1CC8134E7CC7183D03BAC26CE24F3160128610851F0DE7FA773966"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using WinRT;

namespace DMHelper.Views
{
    partial class CreateMonsterPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(global::Microsoft.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedValue = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(global::Microsoft.UI.Xaml.Controls.Primitives.Selector obj, global::System.Int32 value)
            {
                obj.SelectedIndex = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase obj, global::System.Double value)
            {
                obj.Value = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBox_Text(global::Microsoft.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateMonsterPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ICreateMonsterPage_Bindings
        {
            private global::DMHelper.Views.CreateMonsterPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj4;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj5;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj6;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj7;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj8;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj9;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj10;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj11;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj12;
            private global::Microsoft.UI.Xaml.Controls.Slider obj13;
            private global::Microsoft.UI.Xaml.Controls.Slider obj14;
            private global::Microsoft.UI.Xaml.Controls.Slider obj15;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj16;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4SelectedValueDisabled = false;
            private static bool isobj5SelectedValueDisabled = false;
            private static bool isobj6SelectedValueDisabled = false;
            private static bool isobj7SelectedValueDisabled = false;
            private static bool isobj8SelectedValueDisabled = false;
            private static bool isobj9SelectedValueDisabled = false;
            private static bool isobj10SelectedIndexDisabled = false;
            private static bool isobj11SelectedValueDisabled = false;
            private static bool isobj12SelectedValueDisabled = false;
            private static bool isobj13ValueDisabled = false;
            private static bool isobj14ValueDisabled = false;
            private static bool isobj15ValueDisabled = false;
            private static bool isobj16TextDisabled = false;

            private CreateMonsterPage_obj1_BindingsTracking bindingsTracking;

            public CreateMonsterPage_obj1_Bindings()
            {
                this.bindingsTracking = new CreateMonsterPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 383 && columnNumber == 31)
                {
                    isobj4SelectedValueDisabled = true;
                }
                else if (lineNumber == 341 && columnNumber == 31)
                {
                    isobj5SelectedValueDisabled = true;
                }
                else if (lineNumber == 299 && columnNumber == 31)
                {
                    isobj6SelectedValueDisabled = true;
                }
                else if (lineNumber == 257 && columnNumber == 31)
                {
                    isobj7SelectedValueDisabled = true;
                }
                else if (lineNumber == 215 && columnNumber == 31)
                {
                    isobj8SelectedValueDisabled = true;
                }
                else if (lineNumber == 173 && columnNumber == 31)
                {
                    isobj9SelectedValueDisabled = true;
                }
                else if (lineNumber == 143 && columnNumber == 31)
                {
                    isobj10SelectedIndexDisabled = true;
                }
                else if (lineNumber == 112 && columnNumber == 31)
                {
                    isobj11SelectedValueDisabled = true;
                }
                else if (lineNumber == 92 && columnNumber == 31)
                {
                    isobj12SelectedValueDisabled = true;
                }
                else if (lineNumber == 81 && columnNumber == 29)
                {
                    isobj13ValueDisabled = true;
                }
                else if (lineNumber == 69 && columnNumber == 29)
                {
                    isobj14ValueDisabled = true;
                }
                else if (lineNumber == 57 && columnNumber == 29)
                {
                    isobj15ValueDisabled = true;
                }
                else if (lineNumber == 44 && columnNumber == 31)
                {
                    isobj16TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 4: // Views\CreateMonsterPage.xaml line 378
                        this.obj4 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_4(this.obj4);
                        break;
                    case 5: // Views\CreateMonsterPage.xaml line 336
                        this.obj5 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 6: // Views\CreateMonsterPage.xaml line 294
                        this.obj6 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_6(this.obj6);
                        break;
                    case 7: // Views\CreateMonsterPage.xaml line 252
                        this.obj7 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_7(this.obj7);
                        break;
                    case 8: // Views\CreateMonsterPage.xaml line 210
                        this.obj8 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_8(this.obj8);
                        break;
                    case 9: // Views\CreateMonsterPage.xaml line 168
                        this.obj9 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    case 10: // Views\CreateMonsterPage.xaml line 139
                        this.obj10 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_10(this.obj10);
                        break;
                    case 11: // Views\CreateMonsterPage.xaml line 107
                        this.obj11 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_11(this.obj11);
                        break;
                    case 12: // Views\CreateMonsterPage.xaml line 87
                        this.obj12 = target.As<Microsoft.UI.Xaml.Controls.ComboBox>();
                        this.bindingsTracking.RegisterTwoWayListener_12(this.obj12);
                        break;
                    case 13: // Views\CreateMonsterPage.xaml line 75
                        this.obj13 = target.As<Microsoft.UI.Xaml.Controls.Slider>();
                        this.bindingsTracking.RegisterTwoWayListener_13(this.obj13);
                        break;
                    case 14: // Views\CreateMonsterPage.xaml line 63
                        this.obj14 = target.As<Microsoft.UI.Xaml.Controls.Slider>();
                        this.bindingsTracking.RegisterTwoWayListener_14(this.obj14);
                        break;
                    case 15: // Views\CreateMonsterPage.xaml line 51
                        this.obj15 = target.As<Microsoft.UI.Xaml.Controls.Slider>();
                        this.bindingsTracking.RegisterTwoWayListener_15(this.obj15);
                        break;
                    case 16: // Views\CreateMonsterPage.xaml line 39
                        this.obj16 = target.As<Microsoft.UI.Xaml.Controls.TextBox>();
                        this.bindingsTracking.RegisterTwoWayListener_16(this.obj16);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ICreateMonsterPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = newDataRoot.As<DMHelper.Views.CreateMonsterPage>();
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::DMHelper.Views.CreateMonsterPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_newMonster(obj.newMonster, phase);
                    }
                }
            }
            private void Update_newMonster(global::DMHelper.ViewModels.MonstersViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_newMonster(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_newMonster_Charisma(obj.Charisma, phase);
                        this.Update_newMonster_Wisdom(obj.Wisdom, phase);
                        this.Update_newMonster_Intelligence(obj.Intelligence, phase);
                        this.Update_newMonster_Constitution(obj.Constitution, phase);
                        this.Update_newMonster_Dexterity(obj.Dexterity, phase);
                        this.Update_newMonster_Strength(obj.Strength, phase);
                        this.Update_newMonster_EnvironmentTypeId(obj.EnvironmentTypeId, phase);
                        this.Update_newMonster_Attack(obj.Attack, phase);
                        this.Update_newMonster_Speed(obj.Speed, phase);
                        this.Update_newMonster_HitPoints(obj.HitPoints, phase);
                        this.Update_newMonster_Armour(obj.Armour, phase);
                        this.Update_newMonster_Experience(obj.Experience, phase);
                        this.Update_newMonster_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_newMonster_Charisma(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\CreateMonsterPage.xaml line 378
                    if (!isobj4SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj4, obj, null);
                    }
                }
            }
            private void Update_newMonster_Wisdom(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\CreateMonsterPage.xaml line 336
                    if (!isobj5SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj5, obj, null);
                    }
                }
            }
            private void Update_newMonster_Intelligence(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\CreateMonsterPage.xaml line 294
                    if (!isobj6SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj6, obj, null);
                    }
                }
            }
            private void Update_newMonster_Constitution(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\CreateMonsterPage.xaml line 252
                    if (!isobj7SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj7, obj, null);
                    }
                }
            }
            private void Update_newMonster_Dexterity(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\CreateMonsterPage.xaml line 210
                    if (!isobj8SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj8, obj, null);
                    }
                }
            }
            private void Update_newMonster_Strength(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\CreateMonsterPage.xaml line 168
                    if (!isobj9SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj9, obj, null);
                    }
                }
            }
            private void Update_newMonster_EnvironmentTypeId(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\CreateMonsterPage.xaml line 139
                    if (!isobj10SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj10, obj);
                    }
                }
            }
            private void Update_newMonster_Attack(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\CreateMonsterPage.xaml line 107
                    if (!isobj11SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj11, obj, null);
                    }
                }
            }
            private void Update_newMonster_Speed(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\CreateMonsterPage.xaml line 87
                    if (!isobj12SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj12, obj, null);
                    }
                }
            }
            private void Update_newMonster_HitPoints(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\CreateMonsterPage.xaml line 75
                    if (!isobj13ValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj13, obj);
                    }
                }
            }
            private void Update_newMonster_Armour(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\CreateMonsterPage.xaml line 63
                    if (!isobj14ValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj14, obj);
                    }
                }
            }
            private void Update_newMonster_Experience(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\CreateMonsterPage.xaml line 51
                    if (!isobj15ValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj15, obj);
                    }
                }
            }
            private void Update_newMonster_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\CreateMonsterPage.xaml line 39
                    if (!isobj16TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj16, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_4_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newMonster != null)
                        {
                            this.dataRoot.newMonster.Charisma = (global::System.String)this.obj4.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_5_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newMonster != null)
                        {
                            this.dataRoot.newMonster.Wisdom = (global::System.String)this.obj5.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_6_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newMonster != null)
                        {
                            this.dataRoot.newMonster.Intelligence = (global::System.String)this.obj6.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_7_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newMonster != null)
                        {
                            this.dataRoot.newMonster.Constitution = (global::System.String)this.obj7.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_8_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newMonster != null)
                        {
                            this.dataRoot.newMonster.Dexterity = (global::System.String)this.obj8.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_9_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newMonster != null)
                        {
                            this.dataRoot.newMonster.Strength = (global::System.String)this.obj9.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_10_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newMonster != null)
                        {
                            this.dataRoot.newMonster.EnvironmentTypeId = this.obj10.SelectedIndex;
                        }
                    }
                }
            }
            private void UpdateTwoWay_11_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newMonster != null)
                        {
                            this.dataRoot.newMonster.Attack = (global::System.String)this.obj11.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_12_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newMonster != null)
                        {
                            this.dataRoot.newMonster.Speed = (global::System.Int32)this.obj12.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_13_Value()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newMonster != null)
                        {
                            this.dataRoot.newMonster.HitPoints = (global::System.Int32)this.obj13.Value;
                        }
                    }
                }
            }
            private void UpdateTwoWay_14_Value()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newMonster != null)
                        {
                            this.dataRoot.newMonster.Armour = (global::System.Int32)this.obj14.Value;
                        }
                    }
                }
            }
            private void UpdateTwoWay_15_Value()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newMonster != null)
                        {
                            this.dataRoot.newMonster.Experience = (global::System.Int32)this.obj15.Value;
                        }
                    }
                }
            }
            private void UpdateTwoWay_16_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newMonster != null)
                        {
                            this.dataRoot.newMonster.Name = this.obj16.Text;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class CreateMonsterPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<CreateMonsterPage_obj1_Bindings> weakRefToBindingObj; 

                public CreateMonsterPage_obj1_BindingsTracking(CreateMonsterPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<CreateMonsterPage_obj1_Bindings>(obj);
                }

                public CreateMonsterPage_obj1_Bindings TryGetBindingObject()
                {
                    CreateMonsterPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_newMonster(null);
                }

                public void PropertyChanged_newMonster(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    CreateMonsterPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::DMHelper.ViewModels.MonstersViewModel obj = sender as global::DMHelper.ViewModels.MonstersViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_newMonster_Charisma(obj.Charisma, DATA_CHANGED);
                                bindings.Update_newMonster_Wisdom(obj.Wisdom, DATA_CHANGED);
                                bindings.Update_newMonster_Intelligence(obj.Intelligence, DATA_CHANGED);
                                bindings.Update_newMonster_Constitution(obj.Constitution, DATA_CHANGED);
                                bindings.Update_newMonster_Dexterity(obj.Dexterity, DATA_CHANGED);
                                bindings.Update_newMonster_Strength(obj.Strength, DATA_CHANGED);
                                bindings.Update_newMonster_EnvironmentTypeId(obj.EnvironmentTypeId, DATA_CHANGED);
                                bindings.Update_newMonster_Attack(obj.Attack, DATA_CHANGED);
                                bindings.Update_newMonster_Speed(obj.Speed, DATA_CHANGED);
                                bindings.Update_newMonster_HitPoints(obj.HitPoints, DATA_CHANGED);
                                bindings.Update_newMonster_Armour(obj.Armour, DATA_CHANGED);
                                bindings.Update_newMonster_Experience(obj.Experience, DATA_CHANGED);
                                bindings.Update_newMonster_Name(obj.Name, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Charisma":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newMonster_Charisma(obj.Charisma, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Wisdom":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newMonster_Wisdom(obj.Wisdom, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Intelligence":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newMonster_Intelligence(obj.Intelligence, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Constitution":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newMonster_Constitution(obj.Constitution, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Dexterity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newMonster_Dexterity(obj.Dexterity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Strength":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newMonster_Strength(obj.Strength, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EnvironmentTypeId":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newMonster_EnvironmentTypeId(obj.EnvironmentTypeId, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Attack":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newMonster_Attack(obj.Attack, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Speed":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newMonster_Speed(obj.Speed, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "HitPoints":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newMonster_HitPoints(obj.HitPoints, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Armour":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newMonster_Armour(obj.Armour, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Experience":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newMonster_Experience(obj.Experience, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newMonster_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::DMHelper.ViewModels.MonstersViewModel cache_newMonster = null;
                public void UpdateChildListeners_newMonster(global::DMHelper.ViewModels.MonstersViewModel obj)
                {
                    if (obj != cache_newMonster)
                    {
                        if (cache_newMonster != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_newMonster).PropertyChanged -= PropertyChanged_newMonster;
                            cache_newMonster = null;
                        }
                        if (obj != null)
                        {
                            cache_newMonster = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_newMonster;
                        }
                    }
                }
                public void RegisterTwoWayListener_4(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_4_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_5(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_6(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_7(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_8(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_8_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_9(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_10(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_10_SelectedIndex();
                        }
                    });
                }
                public void RegisterTwoWayListener_11(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_11_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_12(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_12_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_13(global::Microsoft.UI.Xaml.Controls.Slider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_13_Value();
                        }
                    });
                }
                public void RegisterTwoWayListener_14(global::Microsoft.UI.Xaml.Controls.Slider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_14_Value();
                        }
                    });
                }
                public void RegisterTwoWayListener_15(global::Microsoft.UI.Xaml.Controls.Slider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_15_Value();
                        }
                    });
                }
                public void RegisterTwoWayListener_16(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_16_Text();
                        }
                    };
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\CreateMonsterPage.xaml line 10
                {
                    this.ContentArea = target.As<Microsoft.UI.Xaml.Controls.Grid>();
                }
                break;
            case 3: // Views\CreateMonsterPage.xaml line 424
                {
                    global::Microsoft.UI.Xaml.Controls.Button element3 = target.As<Microsoft.UI.Xaml.Controls.Button>();
                    ((global::Microsoft.UI.Xaml.Controls.Button)element3).Click += this.createMonster;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\CreateMonsterPage.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    CreateMonsterPage_obj1_Bindings bindings = new CreateMonsterPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

